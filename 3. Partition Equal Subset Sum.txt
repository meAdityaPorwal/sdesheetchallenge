// Partition Equal Subset Sum


class Solution{
public:

    bool isSubsetSum(int arr[],int n, int sum){
        
        // int n = arr.size();
        vector<vector<bool>> dp(n+1, vector<bool>(sum+1));
        // vector<vector<bool>> dp(n+1, vector<bool>(sum+1));

        for(int i=0; i<n+1; i++)
        {
            dp[i][0] = true;
        }
        
        for(int i=1; i<sum+1; i++)
        {
            dp[0][i] = false;
        }
        
        for(int i=1; i<n+1; i++)
        {
            for(int j=1; j<sum+1; j++)
            {
                if(arr[i-1] <= j)
                {
                    dp[i][j] = dp[i-1][j - arr[i-1]] || dp[i-1][j];
                }
                else if(arr[i-1] > j)
                {
                    dp[i][j] = dp[i-1][j];
                }
            }
        }
        
        return dp[n][sum];
    }

    int equalPartition(int n, int arr[])
    {
        int sum = 0;
        for(int i=0; i<n; i++)
        {
            sum += arr[i];
        }
        
        if(sum % 2 == 1)    return 0;
        
        else
        {
            if(isSubsetSum(arr, n, sum / 2) == true)
            {
                return 1;
            }
            else
            {
                return 0;
            }
        }
    }
};