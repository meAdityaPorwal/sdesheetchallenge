// Longest Common Substring


int longestCommonSubstr(string s1, string s2) {
        
        int m = s1.size();
        int n = s2.size();
        
        if(m == 0 || n == 0)  return 0;
        
        vector<vector<int>> dp(m+1, vector<int> (n+1));
        
        for(int i=0; i<m+1; i++)
        {
            for(int j=0; j<n+1; j++)
            {
                if(i == 0 || j == 0)
                {
                    dp[i][j] = 0;
                }
            }
        }
        
        int maxLength = 0;
        for(int i=1; i<m+1; i++)
        {
            for(int j=1; j<n+1; j++)
            {
                if(s1[i-1] == s2[j-1])
                {
                    dp[i][j] = 1 + dp[i-1][j-1];
                    maxLength = max(maxLength, dp[i][j]);
                }
                else
                {
                    dp[i][j] = 0;
                }
            }
        }
        return maxLength;
    }