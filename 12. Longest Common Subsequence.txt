// Longest Common Subsequence


int lcs(int n, int m, string str1, string str2) 
    {
        vector<vector<int>> dp(n+1, vector<int> (m+1));
        
        // Inititalizing first row and first column / Base Condition
        for(int i=0; i<n+1; i++)
        {
            for(int j=0; j<m+1; j++)
            {
                if(i == 0 || j == 0)
                {
                    dp[i][j] == 0;
                }
            }
        }
        
        // Main Code / Choice Diagram
        for(int i=1; i<n+1; i++)
        {
            for(int j=1; j<m+1; j++)
            {
                if(str1[i-1] == str2[j-1])
                {
                    dp[i][j] = 1 + dp[i-1][j-1];
                }
                else
                {
                    dp[i][j] = max(dp[i][j-1], dp[i-1][j]);
                }
            }
        }
        return dp[n][m];
    }
